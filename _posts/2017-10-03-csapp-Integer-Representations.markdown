---
layout:     post
title:      "计算机如何存储、解析整数？"
subtitle:   "无符号数、有符号数、补码、原码"
iframe:     "http://linzb.xyz/Integer-Representations/"
date:       2017-10-03
author:     "Linzb"
tags:
    - CSAPP
    - 计算机科学基础
---


> 计算机编码整数有两种不同的方式：一种只能表示非负数，另一种能够表示负数、零和正数。计算机是如何对这两种编码方式进行存储和解析的呢？


## Catagory

1. [整数数据类型](#整数数据类型)
2. [无符号数编码](#无符号数编码)
3. [补码编码](#补码编码)
4. [无符号数和有符号数的转换](#无符号数和有符号数的转换)
5. [如何扩展一个整数的位](#如何扩展一个整数的位)
6. [如何截断一个整数的位](#如何截断一个整数的位)
7. [相关建议](#相关建议)

## 整数数据类型
在编程语言中，数据类型是用来约束程序对数据的解释，常见的原始数据类型有整数和浮点数。数据类型描述里数值的表示方式、解释和结构。

每一个数据类型都有一个数值上的最大和最小值，称作数值范围。了解数值的范围很重要，当使用较小的类型时，你就只能储存范围之内的数值。试图储存一个超出其范围的数值，可能会导致编译或执行错误，或者不正确的计算结果（因为被截断）。

一个数据类型的数值范围，取决于用以保存数值的字节的数目，而且整数数据类型通常能够储存 2^n 数值（此处的n是指位元）。对于其它的数据类型（例如，浮点数），其数值范围更为复杂，且几乎取决于所使用的储存方法。还有一些不用完全部的位元，例如，布尔只需一个位元，且表示一个二进制值（虽然在实践中，通常会用完剩余的7个位元）。

| c数据类型       | 最小值         | 最大值   |
| ------------- |:-------------:| -----:  |
| [signed]char  | -127          |   127   |
| unsigned char |  0            |   255   |
| short         | -32767        |  32767  |
| unsigned short|  0            |   65535 |
| int           | -32767        |  32767  |
| unsigned [int]|  0            |   65535 |
| long          |-2 147 483 647 |2 147 483 647 |
| unsigned long | 0             |4 294 967 295 |
| int32_t       |-2 147 483 648 |2 147 483 647 |
| uint32_t      | 0             |4 294 967 295 |
| int64_t       |-9 223 372 036 854 775 808 |9 223 372 036 854 775 807 |
| uint64_t      | 0             |18 446 744 073 709 551 615 |
>C 语言的整数数据类型的保证取值范围。C 语言标准要求这些数据类型必须至少具有这样的取值范围。


## 无符号数编码


## 补码编码


## 无符号数和有符号数的转换


## 如何扩展一个整数的位


## 如何截断一个整数的位


## 相关建议
